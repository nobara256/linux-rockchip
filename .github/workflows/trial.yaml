# This is a basic workflow to help you get started with Actions

name: download-kernel

# Controls when the workflow will run
on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "kernel-build"
    get-kernel-source-array:
        # The type of runner that the job will run on
        runs-on: ubuntu-24.04
        outputs:
            xarray: ${{ steps.gen-array.outputs.array }}

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: Get the kernel package list
              id: gen-array
              run: python3 package-array.py "$(curl -s https://www.kernel.org/releases.json)" >> $GITHUB_OUTPUT

    # This workflow contains a single job called "kernel-build"
    gen-kernel-package:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        needs: get-kernel-source-array

        strategy:
            matrix: ${{ fromJSON(needs.get-kernel-source-array.outputs.xarray) }}

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: Download linux-${{ matrix.version }} package
              run: wget --quiet ${{ matrix.source }}

            - name: Extract linux-${{ matrix.version }} package
              run: tar -xf $(basename ${{ matrix.source }})

            - name: Patch linux-${{ matrix.version }} package
              run: |
                patch --strip=1 --directory=linux-${{ matrix.version }} < patch/oracular.patch
                patch --strip=1 --directory=linux-${{ matrix.version }} < patch/overlay-dtc.patch
                cp -f kernel.config linux-${{ matrix.version }}/debian.rockchip/config/config.common.ubuntu
                cp -f dts/rk3588* linux-${{ matrix.version }}/arch/arm64/boot/dts/rockchip



