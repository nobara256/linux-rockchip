# This is a basic workflow to help you get started with Actions

name: download-kernel

# Controls when the workflow will run
on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "kernel-build"
    get-kernel-source-array:
        # The type of runner that the job will run on
        runs-on: ubuntu-24.04
        outputs:
            xarray: ${{ steps.gen-array.outputs.array }}

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: Get the kernel package list
              id: gen-array
              run: python3 package-array.py "$(curl -s https://www.kernel.org/releases.json)" >> $GITHUB_OUTPUT

    # This workflow contains a single job called "kernel-build"
    gen-kernel-package:
        # The type of runner that the job will run on
        runs-on: ubuntu-24.04
        needs: get-kernel-source-array

        strategy:
            matrix: ${{ fromJSON(needs.get-kernel-source-array.outputs.xarray) }}

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: Install dependencies.
              run: |
                sudo apt update
                sudo apt install -y devscripts

            - name: Download linux-${{ matrix.version }} package
              run: wget --quiet ${{ matrix.source }}

            - name: Extract linux-${{ matrix.version }} package
              run: tar -xf $(basename ${{ matrix.source }})

            - name: Patch linux-${{ matrix.version }} package
              run: |
                patch --strip=1 --directory=linux-$KERNEL_VERSION < patch/oracular.patch
                patch --strip=1 --directory=linux-$KERNEL_VERSION < patch/overlay-dtc.patch
                cp -f kernel.config linux-$KERNEL_VERSION/debian.rockchip/config/config.common.ubuntu
                cp -f dts/rockchip/rk3588* linux-$KERNEL_VERSION/arch/arm64/boot/dts/rockchip
                dch                                                           \
                  --create                                                    \
                  --package linux-rockchip                                    \
                  --changelog linux-$KERNEL_VERSION/debian.rockchip/changelog \
                  --distribution oracular                                     \
                  --urgency medium                                            \
                  -v $KERNEL_VERSION-${KERNEL_RELEASE_DATE//-}                \
                  "Linux $KERNEL_VERSION ubuntu-rockchip oracular"
              shell: bash
              env:
                DEBEMAIL: nobara256@oracular.ubuntu
                DEBFULLNAME: Nobara Kurokawa
                KERNEL_VERSION: ${{ matrix.version }}
                KERNEL_RELEASE_DATE: ${{ matrix.released.isodate }}

            - name: Build linux-${{ matrix.version }} package
              run: fakeroot debian/rules clean defaultconfigs binary-headers binary-rockchip do_mainline_build=true
              shell: bash
              working-directory: linux-${{ matrix.version }}
              env:
                CROSS_COMPILE: aarch64-linux-gnu-
                CC: aarch64-linux-gnu-gcc
                LANG: C

            - name: Upload linux-${{ matrix.version }} package
              uses: actions/upload-artifact@v4.5.0
              with:
                name: linux-${{ matrix.version }}-rockchip
                path: linux-*.deb
                compression-level: 0
                if-no-files-found: error